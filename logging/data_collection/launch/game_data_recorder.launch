<launch>

	<!--
    <rosparam command="load" file="$(find arduino_publisher)/config/arduino.yaml" />
    <rosparam command="load" file="$(find tower_manager)/config/tower_config.yaml" /> -->
    
    <arg name="path_save"   default="/home/airlab/Documents/bags/game"/>
	<arg name="topic"  	default="/enc /tf /vel /amcl_pose /map_odom_amcl /map /unsafe/cmd_vel
 /cmd_vel /scan_left /scan_right /scan /scan_obstacles /scan_walls /player_global_position /tower_1 /tower_2 /tower_3 /tower_4 /tower_button_press_entropy
 /tower_button_press_mean /tower_button_press_var /robogame/goal /robogame/player_global_position
 /robogame/player_local_position /robogame/player_relative_angle /player/tower_button_info /player_act_prediction /game_manager/towers/State
 /proximity /joy /game/goal /detected_leg_clusters /detected_legs_in_bounding_box
 /visualization_marker
 /particlecloud
 /kinect2/player_filtered_info
 /angle
 /tower/button_state
 /tower/feedback_com
 /tower/tilt_sensor
 /tower_rectangle
 /game_manager/isGameON
 /game_manager/towers/ChangeLEDs
 /game_manager/towers/State
 /game_navigation/trajectory_marker_array
 /game_navigation/single_marker_trajectory
 /player_filtered
 /player_marker
 /people_tracked
 /kf_fusion_marker
 /target_steering
 /pf_cloud
 /scan_player_tracking
 /player_target
 /player_activity
 /player_model
 /start_attack
 /end_attack
 /microgame_outcome
 /parameter_id
 /safety
 /player_cloud
 /navigation/target
 /player_leg_array
 /player
 /filtered_legs
" />
	<arg name="file_name"  	default=""/>

	<group ns="record">
		<param name="path_save" type="str" value="$(arg path_save)"	/>
		<param name="topic" 	type="str" value="$(arg topic)"		/>
		<param name="file_name" type="str" value="$(arg file_name)"	/>
		<node name="record_ros" pkg="record_ros" type="record_ros" output="screen" respawn="true"/>
	</group>
    
    <node pkg="record_bag" type="record.py" name="record_bag" output="screen" respawn="true" />
    

</launch>

