<!-- Launch file to test planner: using only nodes necessary to robot motion-->
<launch>

	<!-- Parameters 
    <rosparam command="load" file="$(find behavior_control)/config/config.yaml" />
	-->
	<param name="steering_mode" value="true" />
    <rosparam command="load" file="$(find game_manager)/params/velocity_config.yaml" />
    <rosparam command="load" file="$(find game_manager)/params/game.yaml" />
    <!-- -->	
    
    <!--<param name="enable_statistics" value="true" /> -->

    <arg name="node_name"             value="velocity_smoother"/>
	<arg name="nodelet_manager_name"  value="nodelet_manager"/>
	<arg name="config_file"           value="$(find yocs_velocity_smoother)/param/standalone.yaml"/>
	<arg name="raw_cmd_vel_topic"     value="raw_cmd_vel"/>
	<arg name="smooth_cmd_vel_topic"  value="cmd_vel"/>
	<arg name="robot_cmd_vel_topic"   value="cmd_vel"/>
	<arg name="odom_topic"            value="odom"/>
    
    <!-- nodelet manager -->
	<node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager_name)" args="manager"/>

	<!-- velocity smoother -->
	<include file="$(find yocs_velocity_smoother)/launch/velocity_smoother.launch">
		<arg name="node_name"             value="$(arg node_name)"/>
		<arg name="nodelet_manager_name"  value="$(arg nodelet_manager_name)"/>
		<arg name="config_file"           value="$(arg config_file)"/>
		<arg name="raw_cmd_vel_topic"     value="$(arg raw_cmd_vel_topic)"/>
		<arg name="smooth_cmd_vel_topic"  value="$(arg smooth_cmd_vel_topic)"/>
		<arg name="robot_cmd_vel_topic"   value="$(arg robot_cmd_vel_topic)"/>
		<arg name="odom_topic"            value="$(arg odom_topic)"/>
	</include>
	
	<!-- Robogame teleop nodes -->
	<param name="linear_scale" value="0.75" />
	<param name="angular_scale" value="1.5" />
	<param name="axis_deadman" value="5"/>
	<param name="linear_x_axis" value="1"/>
	<param name="linear_y_axis" value="0"/>
	<param name="angular_axis" value="2"/>
	<param name="max_linear_scale" value="2"/>
	<param name="max_angular_scale" value="3"/>
	<param name="maximal_time_delay_to_stop" value="10"/>
	
	<node pkg="joy" type="joy_node" name="joy">
        <param name="autorepeat_rate" value="60" />
	</node>

	<node pkg="joystick" type="joystick_node" name="joystick_node" output="screen" respawn="false">
		<!--<remap from="cmd_vel" to="raw_cmd_vel"/>-->
	</node>

    <!-- Load dynamic reconfigure parameters for acml -->
	<node name="dynamic_reconfigure_load" pkg="dynamic_reconfigure" type="dynparam" args="load /amcl $(find game_manager)/params/optimized_params.yaml" />   

   

    <!-- player and tower game information -->
    <!--<node pkg="player_feature" type="player_feature_node" name="player_feature" output="screen" respawn="true" />-->
    <node pkg="tower_manager" type="tower_manager_node" name="tower_manager" output="screen" respawn="true" />
    
    <!-- game manager 
    <node pkg="game_manager" type="node.py" name="game_manager" output="screen" respawn="true" />
    -->
    
	 
  	<!--<arg name="simulation"			default='true'/>-->
	<arg name="robot_base"			default='robot_0/base_link'/>
	<arg name="player_base"			default='robot_1/base_link'/>

	<include file="$(find steering_behavior)/launch/run_test_planner.launch"/>

	<include file="$(find player_tracker)/launch/run.launch"/>
	<!-- Publish tower Rectangle ARLREADY IN PLAYER TRACKER-->
	<!--<node pkg="player_tracker" type="tower_rectangle_creator.py" name="tower_rectangle_creator" output="screen" respawn="true"/>-->

	<!-- Deception (Behavior node) -->
    <node pkg="behavior_with_deception" type="node.py" name="social_analyzer" output="screen" respawn="true" />


</launch>